COMP 150VM Homework Submission

What person or group is submitting this homework?

<<<<<<< HEAD
  Aditi Kocherlakota & Sayak Chatterjee

What work are you proud of?

  all of our tests pass!
=======
  - 

What are the three language features you are submitting for finale practice?  
(Answer with a short sentence identifying the feature and naming the
language that has it.  E.g., "pattern matching as in Erlang" or
"exception handlers as in Python.")

  1.  

  2.  

  3.  


What work are you proud of?

  - 
>>>>>>> upstream/master

What code would you like help improving?  Are there bugs you'd like
help finding during code review?

<<<<<<< HEAD
  we would like to change our assembly syntax for call/tailcall and have parsers for every possible variation.
=======
  - 
>>>>>>> upstream/master

What code, if any, would you especially like the course staff to
review?  Why?

<<<<<<< HEAD
  - Our tailcall, in case there is a more succinct way to implement it
=======
  -
>>>>>>> upstream/master

In this course, all code may be shared freely.  Aside from code that
is distributed with the assignment, does your submission contain any
other code that you got from someone else?  If so, what code is it
(file names and line numbers please) and who supplied it?

<<<<<<< HEAD
    Yes, my fold function was inspired by Sayak's on line 54.
=======
  - 
>>>>>>> upstream/master

In response to last week's code review, have you made any material
changes?  What were they?  By file name and line number, where are
they found in the code?  If you remember, who helped you during code
review?

<<<<<<< HEAD
  - No. I did make some changes from the plenary code review another
  week in assembler.sml on line 100.
=======
  - 

>>>>>>> upstream/master

We have a plenary code review tomorrow.  Are you willing to present
(as a group, if applicable)?

<<<<<<< HEAD
  - Yes
=======
  - 
>>>>>>> upstream/master

Supposing you are not selected to present at tomorrow's plenary code
review, what code would you like to see presented?  What would you
learn the most from?

<<<<<<< HEAD
  - Seeing people's one line parser for call/tailcall
=======
  - 
>>>>>>> upstream/master

Again supposing you are not selected to present, who in your group is
willing to serve on the review panel?

<<<<<<< HEAD
  - I am

Proposed language features:

Pattern matching as in Erlang
Named and optional arguments as in OCaml
Implicit parameters as in Haskell
=======
  - 
>>>>>>> upstream/master
